{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Danceology Documentation Website! Danceology is a Spring 2023 Project developed by Team Danceology for the CMU MET program in collaboration with the Paul Taylor Dance Company. Team Members Christine Jung, Xiaoying Meng, Jiacheng Qiu, Yiming Xiao, Xueying Yang, Angela Zhang Attribution All related assets to this project fall under the CC BY-NC-SA 4.0 License All future derivations of this work should contain attribution to the members listed above. Getting Started - Unity Follow the instructions on the Installation and Build pages to generate your own working local build of the Unity codebase. For development purposes, refer to the Implementation Details page. Getting Started - ML Follow the instructions on the Installation page to get started with the ML codebase locally.","title":"Home"},{"location":"#welcome-to-the-danceology-documentation-website","text":"Danceology is a Spring 2023 Project developed by Team Danceology for the CMU MET program in collaboration with the Paul Taylor Dance Company. Team Members Christine Jung, Xiaoying Meng, Jiacheng Qiu, Yiming Xiao, Xueying Yang, Angela Zhang Attribution All related assets to this project fall under the CC BY-NC-SA 4.0 License All future derivations of this work should contain attribution to the members listed above.","title":"Welcome to the Danceology Documentation Website!"},{"location":"#getting-started-unity","text":"Follow the instructions on the Installation and Build pages to generate your own working local build of the Unity codebase. For development purposes, refer to the Implementation Details page.","title":"Getting Started - Unity"},{"location":"#getting-started-ml","text":"Follow the instructions on the Installation page to get started with the ML codebase locally.","title":"Getting Started - ML"},{"location":"license/","text":"Danceology Licensing All of Danceology and related delivered source code falls under the CC BY-NC-SA 4.0 license described below. Creative Commons Creative Commons Corporation (\u201cCreative Commons\u201d) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \u201cas-is\u201d basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible. Using Creative Commons Public Licenses Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses. Considerations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors . Considerations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor\u2019s permission is not necessary for any reason\u2013for example, because of any applicable exception or limitation to copyright\u2013then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public . Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions. Section 1 \u2013 Definitions. a. Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image. b. Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License. c. BY-NC-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses , approved by Creative Commons as essentially the equivalent of this Public License. d. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights. e. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements. f. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material. g. License Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution, NonCommercial, and ShareAlike. h. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License. i. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license. j. Licensor means the individual(s) or entity(ies) granting rights under this Public License. k. NonCommercial means not primarily intended for or directed towards commercial advantage or monetary compensation. For purposes of this Public License, the exchange of the Licensed Material for other material subject to Copyright and Similar Rights by digital file-sharing or similar means is NonCommercial provided there is no payment of monetary compensation in connection with the exchange. l. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them. m. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world. n. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning. Section 2 \u2013 Scope. a. License grant. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to: A. reproduce and Share the Licensed Material, in whole or in part, for NonCommercial purposes only; and B. produce, reproduce, and Share Adapted Material for NonCommercial purposes only. Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions. Term. The term of this Public License is specified in Section 6(a). Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material. Downstream recipients. A. __Offer from the Licensor \u2013 Licensed Material.__ Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. B. __Additional offer from the Licensor \u2013 Adapted Material.__ Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter\u2019s License You apply. C. __No downstream restrictions.__ You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material. No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i). b. Other rights. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise. Patent and trademark rights are not licensed under this Public License. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties, including when the Licensed Material is used other than for NonCommercial purposes. Section 3 \u2013 License Conditions. Your exercise of the Licensed Rights is expressly made subject to the following conditions. a. Attribution. If You Share the Licensed Material (including in modified form), You must: A. retain the following if it is supplied by the Licensor with the Licensed Material: i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); ii. a copyright notice; iii. a notice that refers to this Public License; iv. a notice that refers to the disclaimer of warranties; v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable; B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable. b. ShareAlike. In addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply. The Adapter\u2019s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-NC-SA Compatible License. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply. Section 4 \u2013 Sui Generis Database Rights. Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material: a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database for NonCommercial purposes only; b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database. For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights. Section 5 \u2013 Disclaimer of Warranties and Limitation of Liability. a. Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You. b. To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You. c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability. Section 6 \u2013 Term and Termination. a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically. b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates: automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License. c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License. d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License. Section 7 \u2013 Other Terms and Conditions. a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed. b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License. Section 8 \u2013 Interpretation. a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License. b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions. c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies , Creative Commons does not authorize the use of the trademark \u201cCreative Commons\u201d or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses. Creative Commons may be contacted at creativecommons.org","title":"License"},{"location":"license/#danceology-licensing","text":"All of Danceology and related delivered source code falls under the CC BY-NC-SA 4.0 license described below.","title":"Danceology Licensing"},{"location":"license/#creative-commons","text":"Creative Commons Corporation (\u201cCreative Commons\u201d) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \u201cas-is\u201d basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible. Using Creative Commons Public Licenses Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses. Considerations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors . Considerations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor\u2019s permission is not necessary for any reason\u2013for example, because of any applicable exception or limitation to copyright\u2013then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public .","title":"Creative Commons"},{"location":"license/#creative-commons-attribution-noncommercial-sharealike-40-international-public-license","text":"By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.","title":"Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License"},{"location":"license/#section-1-definitions","text":"a. Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image. b. Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License. c. BY-NC-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses , approved by Creative Commons as essentially the equivalent of this Public License. d. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights. e. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements. f. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material. g. License Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution, NonCommercial, and ShareAlike. h. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License. i. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license. j. Licensor means the individual(s) or entity(ies) granting rights under this Public License. k. NonCommercial means not primarily intended for or directed towards commercial advantage or monetary compensation. For purposes of this Public License, the exchange of the Licensed Material for other material subject to Copyright and Similar Rights by digital file-sharing or similar means is NonCommercial provided there is no payment of monetary compensation in connection with the exchange. l. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them. m. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world. n. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.","title":"Section 1 \u2013 Definitions."},{"location":"license/#section-2-scope","text":"a. License grant. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to: A. reproduce and Share the Licensed Material, in whole or in part, for NonCommercial purposes only; and B. produce, reproduce, and Share Adapted Material for NonCommercial purposes only. Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions. Term. The term of this Public License is specified in Section 6(a). Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material. Downstream recipients. A. __Offer from the Licensor \u2013 Licensed Material.__ Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. B. __Additional offer from the Licensor \u2013 Adapted Material.__ Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter\u2019s License You apply. C. __No downstream restrictions.__ You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material. No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i). b. Other rights. Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise. Patent and trademark rights are not licensed under this Public License. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties, including when the Licensed Material is used other than for NonCommercial purposes.","title":"Section 2 \u2013 Scope."},{"location":"license/#section-3-license-conditions","text":"Your exercise of the Licensed Rights is expressly made subject to the following conditions. a. Attribution. If You Share the Licensed Material (including in modified form), You must: A. retain the following if it is supplied by the Licensor with the Licensed Material: i. identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); ii. a copyright notice; iii. a notice that refers to this Public License; iv. a notice that refers to the disclaimer of warranties; v. a URI or hyperlink to the Licensed Material to the extent reasonably practicable; B. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and C. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable. b. ShareAlike. In addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply. The Adapter\u2019s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-NC-SA Compatible License. You must include the text of, or the URI or hyperlink to, the Adapter's License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter's License You apply.","title":"Section 3 \u2013 License Conditions."},{"location":"license/#section-4-sui-generis-database-rights","text":"Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material: a. for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database for NonCommercial purposes only; b. if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and c. You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database. For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.","title":"Section 4 \u2013 Sui Generis Database Rights."},{"location":"license/#section-5-disclaimer-of-warranties-and-limitation-of-liability","text":"a. Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You. b. To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You. c. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.","title":"Section 5 \u2013 Disclaimer of Warranties and Limitation of Liability."},{"location":"license/#section-6-term-and-termination","text":"a. This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically. b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates: automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License. c. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License. d. Sections 1, 5, 6, 7, and 8 survive termination of this Public License.","title":"Section 6 \u2013 Term and Termination."},{"location":"license/#section-7-other-terms-and-conditions","text":"a. The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed. b. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.","title":"Section 7 \u2013 Other Terms and Conditions."},{"location":"license/#section-8-interpretation","text":"a. For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License. b. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions. c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies , Creative Commons does not authorize the use of the trademark \u201cCreative Commons\u201d or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses. Creative Commons may be contacted at creativecommons.org","title":"Section 8 \u2013 Interpretation."},{"location":"ml/installation/","text":"ML Installation Overview This document provides the details on how to install and set up a development environment for the Python-based/ML component of the Danceology project. All of the following documentation will assume a certain amount of familiarity with Python and Git/GitHub technologies. Unity Project Repository Link https://github.com/ETCDanceology/Danceology-ML Tech Requirements Python The Danceology project used Python 3.10 for development, along with pip to install all packages and dependencies. Installation Steps Clone the Danceology ML repository locally (Optional) Set up a Python virtual environment Install all dependencies using % pip install -r requirements.txt Running ML Model on Input Video All scripts and logic related to ML-based video processing are within the video_processing folder. cd into the video_processing directory Run the following command % python main.py -i [path_to_input_video] -o [path_to_output_json] The output json file from this can be directly used for data cleaning below. Data Cleaning All data cleaning scripts and logic are within the data_cleaning folder. The main.py file contains all the main cleaning functions; the util.py file contains all utility functions that are used during the data cleaning process. You can customize how data cleaning is done by modifying different parameters within the main.py file. cd into the data_cleaning directory Run the following command % python main.py -i [path_to_input_json] -o [path_to_output_json] The output file from data cleaning can be used within the Unity project.","title":"Installation"},{"location":"ml/installation/#ml-installation","text":"","title":"ML Installation"},{"location":"ml/installation/#overview","text":"This document provides the details on how to install and set up a development environment for the Python-based/ML component of the Danceology project. All of the following documentation will assume a certain amount of familiarity with Python and Git/GitHub technologies.","title":"Overview"},{"location":"ml/installation/#unity-project","text":"","title":"Unity Project"},{"location":"ml/installation/#repository-link","text":"https://github.com/ETCDanceology/Danceology-ML","title":"Repository Link"},{"location":"ml/installation/#tech-requirements","text":"","title":"Tech Requirements"},{"location":"ml/installation/#python","text":"The Danceology project used Python 3.10 for development, along with pip to install all packages and dependencies.","title":"Python"},{"location":"ml/installation/#installation-steps","text":"Clone the Danceology ML repository locally (Optional) Set up a Python virtual environment Install all dependencies using % pip install -r requirements.txt","title":"Installation Steps"},{"location":"ml/installation/#running-ml-model-on-input-video","text":"All scripts and logic related to ML-based video processing are within the video_processing folder. cd into the video_processing directory Run the following command % python main.py -i [path_to_input_video] -o [path_to_output_json] The output json file from this can be directly used for data cleaning below.","title":"Running ML Model on Input Video"},{"location":"ml/installation/#data-cleaning","text":"All data cleaning scripts and logic are within the data_cleaning folder. The main.py file contains all the main cleaning functions; the util.py file contains all utility functions that are used during the data cleaning process. You can customize how data cleaning is done by modifying different parameters within the main.py file. cd into the data_cleaning directory Run the following command % python main.py -i [path_to_input_json] -o [path_to_output_json] The output file from data cleaning can be used within the Unity project.","title":"Data Cleaning"},{"location":"unity/build/","text":"Unity Building Overview This document provides the details on how to make a build for the Danceology application. Creating Build Click on File -> Build Settings to open the Build Settings window Select the desired platform for building (Windows, Linux, Mac). If development logging is needed, check the \"Development Build\" box Click on \"Build\". This will open a window to select a folder to output the build, then start the build","title":"Build"},{"location":"unity/build/#unity-building","text":"","title":"Unity Building"},{"location":"unity/build/#overview","text":"This document provides the details on how to make a build for the Danceology application.","title":"Overview"},{"location":"unity/build/#creating-build","text":"Click on File -> Build Settings to open the Build Settings window Select the desired platform for building (Windows, Linux, Mac). If development logging is needed, check the \"Development Build\" box Click on \"Build\". This will open a window to select a folder to output the build, then start the build","title":"Creating Build"},{"location":"unity/implementation/","text":"Unity Implementation Overview This document provides implementation details on the Danceology project; specifically, we will provide details on how different features are being implemented and what the main gameplay loop looks like from the implementation-side. For further Unity documentation see their User Manual . Scene Breakdown The following sections provide a general overview of what happens behind-the-scenes in a given play session within each of the three main scenes. Start Scene When the application is first started, the user is presented with a series of menus within the StartScene . Each of these UI menus has a series of different buttons that swaps out the window, stored player settings based on their selections, etc. All the UI assets can be found under the MainUI GameObject in the Hierarchy Inspector. All of the exact interactions are handled by local UI scripts attached to the UIs themselves, which in turn interact with the GameManager to manipulate the scene. This GameManager will persist throughout the entire experience and store all the key data associated with that given session. The user will go through starting the experience, selecting a level, and, if applicable, configuring their camera settings. Afterwards, the appropriate level will be loaded with the user's settings. Intro Scene In the special case of the Intro level being selected, the user will be brought immediately to the IntroLevel scene, within which they will be presented with an introduction video. As this level has no progression or feedback, it will play the video until the end before exiting back to the starting menu. The video itself is rendered on the Video Raw Image GameObject, which has a RawImage UI components that takes in a video texture. The video texture and the source video itself can be found within the Assets/Textures/Videos directory; to swap out the introduction video, you can swap out the Intro Video.mov video file stored here. Main Scene For all other levels, the MainScene is loaded. There are a number of key GameObjects within this scene that work together to allow a user to smoothly progress through the experience. Some of the key GameObjects to be aware of here: - PoseDetect : Contains all the logic for webcam-based pose detection of the player throughout the experience, along with connecting the output from the ML model to the various scripts that will compare the player's motions with the reference data and display the player's joint positions on the screen - MainUI : Overall GameObject that contains all of the UI assets used within the game - EranFinal : Final 3D model that performs the Back Exercise animation. It contains an AnimModelMovement component that drives its motions and all frame-based logic throughout the rest of the level - Movement Compare : Receives the webcam input data from PoseDetect and performs actual movement comparison Note that GameManager is created in the StartScene and persists into this one. There are two distinct types of levels that are served by the MainScene : tutorial (guided, voiced over, having distinct visual effects and pacing) and standard (unguided, no voice-over, indicators for next pose, scoring and feedback). Overview The GameManager will trigger different stages of the experience based on the following 6 states declared within the Assets/Scripts/Data/GameState.cs file: GameStart : Triggered once a level has been selected from the initial main menu Loading : As soon as a game is started, all related assets and preparations are conducted during this loading phase. This phase starts with the loading bar shows up and lasts until loading is finished LevelPrepare : Any additional level preparation before the main gameplay loop is started. If the user selected to experience the level with a webcam, this state includes the camera calibration phase before a user fully jumps into the level LevelStart : Called once a level is actually about to begin, after the level preparation has concluded. In this stage, any level-specific information is initialized and loaded InLevel : This phase lasts as long as the level lasts. Typically, this means going until the 3D animation has concluded, i.e. until the entire exercise has been performed LevelEnd : This phase is triggered right when the level ends, and will remain until the player choose to progress (go to the next level), restart the current level, or exit back to the main menu. All of the levels will follow this progression flow, and the scripts will perform different actions depending on which state we are currently in. Tutorial The tutorial levels are driven by a TutorialKeyFrameData ScriptableObject, whose details can be found in its corresponding Assets/Scripts/TutorialKeyFrameData.cs script file. Within this scriptable object, a developer can customize the tutorial flow by determining which different events are triggered at each frame of the animation. Generally speaking, all events should be added to the ActionList , where Frame Count will denote the frame where the event is triggered, Key Frame Type specifies the type of event to trigger, and all other fields provide supplemental details on how the event should behave. More detailed information on each of the fields and different types of events can be found documented within the TutorialKeyFrameData.cs file. Once created, the tutorial data is attached to the AnimModelMovement component of the EranFinal GameObject. The current tutorial data can be found in the Assets/Data directory. All of the different types of events within the tutorial are read from this ScriptableObject and actualized by the TutorialManager script. Once the entire tutorial flow has concluded, the level will end. General The general levels will provide specific feedback and manipulate the UI according to the reference video data generated by the external ML component of this project. Firstly, the given level data is read in from a .json file in the Assets/Resources folder using the functions provided in the Assets/Scripts/Data/LevelData.cs file. Once read, the level data will contain all of the keypoints (both 2D and 3D) for the loaded file along with a list of Key Poses . For the entirety of the experience, we refer to poses/frames where we score the user as \"key poses\", and they are what the team identified to be the most identifiable \"poses\" within the back exercise. As of the final build, only the 2D and key pose data are used for pose matching; 3D data is no longer being used to directly drive model animation. On each input frame from the webcam, the frame is passed to the OpenPose ML model via the PoseDetector script; the output of this model is converted using the OpenPoseOutputProcessor class, and MovementCompare uses this information along with the reference keypoints to determine accuracy. Movement Scoring Movement scoring for this project was done in the following way: Isolate a single person within the frame. Although OpenPose can track multiple people within a frame, we designed the movement comparison to be more consistent by tracking only a single person within the frame itself. This is denoted by the mainFocus parameter passed between the PoseProcessing files. Extract the points (if they exist) for key joints and connections for both the player and reference. Specifically, we are measuring arms, legs, shoulders, and hip positions as we found these to be most accurate in measuring a person's position without being overly granular. These are declared at the top of the MovementCompare file. Measure the slope between the two points for each of these connections (for instance, the slope to go from LForeArm to LHand) in both the player and reference data. Then, grab the angular difference between the player data and reference data. By using slope and angular difference, we minimize distance differences that are caused by differences in body proportions. Scale the angular difference to a scored value - the smaller the angular difference, the higher the score. To account for potential webcam delays, we repeat the above and score a few frames before & after the intended \"key pose\" frame, then take the maximum score across all. There are a few more nuances in how we handle edge cases, such as: If a point was not captured by the webcam If a point was not present in the reference data If the distance between points was too miniscule (close to zero) and causes issues in calculations of the above This scoring is then converted into a FeedbackUI displayed during the level along with being factored into the final score presented to the user after the level has ended.","title":"Implementation"},{"location":"unity/implementation/#unity-implementation","text":"","title":"Unity Implementation"},{"location":"unity/implementation/#overview","text":"This document provides implementation details on the Danceology project; specifically, we will provide details on how different features are being implemented and what the main gameplay loop looks like from the implementation-side. For further Unity documentation see their User Manual .","title":"Overview"},{"location":"unity/implementation/#scene-breakdown","text":"The following sections provide a general overview of what happens behind-the-scenes in a given play session within each of the three main scenes.","title":"Scene Breakdown"},{"location":"unity/implementation/#start-scene","text":"When the application is first started, the user is presented with a series of menus within the StartScene . Each of these UI menus has a series of different buttons that swaps out the window, stored player settings based on their selections, etc. All the UI assets can be found under the MainUI GameObject in the Hierarchy Inspector. All of the exact interactions are handled by local UI scripts attached to the UIs themselves, which in turn interact with the GameManager to manipulate the scene. This GameManager will persist throughout the entire experience and store all the key data associated with that given session. The user will go through starting the experience, selecting a level, and, if applicable, configuring their camera settings. Afterwards, the appropriate level will be loaded with the user's settings.","title":"Start Scene"},{"location":"unity/implementation/#intro-scene","text":"In the special case of the Intro level being selected, the user will be brought immediately to the IntroLevel scene, within which they will be presented with an introduction video. As this level has no progression or feedback, it will play the video until the end before exiting back to the starting menu. The video itself is rendered on the Video Raw Image GameObject, which has a RawImage UI components that takes in a video texture. The video texture and the source video itself can be found within the Assets/Textures/Videos directory; to swap out the introduction video, you can swap out the Intro Video.mov video file stored here.","title":"Intro Scene"},{"location":"unity/implementation/#main-scene","text":"For all other levels, the MainScene is loaded. There are a number of key GameObjects within this scene that work together to allow a user to smoothly progress through the experience. Some of the key GameObjects to be aware of here: - PoseDetect : Contains all the logic for webcam-based pose detection of the player throughout the experience, along with connecting the output from the ML model to the various scripts that will compare the player's motions with the reference data and display the player's joint positions on the screen - MainUI : Overall GameObject that contains all of the UI assets used within the game - EranFinal : Final 3D model that performs the Back Exercise animation. It contains an AnimModelMovement component that drives its motions and all frame-based logic throughout the rest of the level - Movement Compare : Receives the webcam input data from PoseDetect and performs actual movement comparison Note that GameManager is created in the StartScene and persists into this one. There are two distinct types of levels that are served by the MainScene : tutorial (guided, voiced over, having distinct visual effects and pacing) and standard (unguided, no voice-over, indicators for next pose, scoring and feedback).","title":"Main Scene"},{"location":"unity/implementation/#overview_1","text":"The GameManager will trigger different stages of the experience based on the following 6 states declared within the Assets/Scripts/Data/GameState.cs file: GameStart : Triggered once a level has been selected from the initial main menu Loading : As soon as a game is started, all related assets and preparations are conducted during this loading phase. This phase starts with the loading bar shows up and lasts until loading is finished LevelPrepare : Any additional level preparation before the main gameplay loop is started. If the user selected to experience the level with a webcam, this state includes the camera calibration phase before a user fully jumps into the level LevelStart : Called once a level is actually about to begin, after the level preparation has concluded. In this stage, any level-specific information is initialized and loaded InLevel : This phase lasts as long as the level lasts. Typically, this means going until the 3D animation has concluded, i.e. until the entire exercise has been performed LevelEnd : This phase is triggered right when the level ends, and will remain until the player choose to progress (go to the next level), restart the current level, or exit back to the main menu. All of the levels will follow this progression flow, and the scripts will perform different actions depending on which state we are currently in.","title":"Overview"},{"location":"unity/implementation/#tutorial","text":"The tutorial levels are driven by a TutorialKeyFrameData ScriptableObject, whose details can be found in its corresponding Assets/Scripts/TutorialKeyFrameData.cs script file. Within this scriptable object, a developer can customize the tutorial flow by determining which different events are triggered at each frame of the animation. Generally speaking, all events should be added to the ActionList , where Frame Count will denote the frame where the event is triggered, Key Frame Type specifies the type of event to trigger, and all other fields provide supplemental details on how the event should behave. More detailed information on each of the fields and different types of events can be found documented within the TutorialKeyFrameData.cs file. Once created, the tutorial data is attached to the AnimModelMovement component of the EranFinal GameObject. The current tutorial data can be found in the Assets/Data directory. All of the different types of events within the tutorial are read from this ScriptableObject and actualized by the TutorialManager script. Once the entire tutorial flow has concluded, the level will end.","title":"Tutorial"},{"location":"unity/implementation/#general","text":"The general levels will provide specific feedback and manipulate the UI according to the reference video data generated by the external ML component of this project. Firstly, the given level data is read in from a .json file in the Assets/Resources folder using the functions provided in the Assets/Scripts/Data/LevelData.cs file. Once read, the level data will contain all of the keypoints (both 2D and 3D) for the loaded file along with a list of Key Poses . For the entirety of the experience, we refer to poses/frames where we score the user as \"key poses\", and they are what the team identified to be the most identifiable \"poses\" within the back exercise. As of the final build, only the 2D and key pose data are used for pose matching; 3D data is no longer being used to directly drive model animation. On each input frame from the webcam, the frame is passed to the OpenPose ML model via the PoseDetector script; the output of this model is converted using the OpenPoseOutputProcessor class, and MovementCompare uses this information along with the reference keypoints to determine accuracy.","title":"General"},{"location":"unity/implementation/#movement-scoring","text":"Movement scoring for this project was done in the following way: Isolate a single person within the frame. Although OpenPose can track multiple people within a frame, we designed the movement comparison to be more consistent by tracking only a single person within the frame itself. This is denoted by the mainFocus parameter passed between the PoseProcessing files. Extract the points (if they exist) for key joints and connections for both the player and reference. Specifically, we are measuring arms, legs, shoulders, and hip positions as we found these to be most accurate in measuring a person's position without being overly granular. These are declared at the top of the MovementCompare file. Measure the slope between the two points for each of these connections (for instance, the slope to go from LForeArm to LHand) in both the player and reference data. Then, grab the angular difference between the player data and reference data. By using slope and angular difference, we minimize distance differences that are caused by differences in body proportions. Scale the angular difference to a scored value - the smaller the angular difference, the higher the score. To account for potential webcam delays, we repeat the above and score a few frames before & after the intended \"key pose\" frame, then take the maximum score across all. There are a few more nuances in how we handle edge cases, such as: If a point was not captured by the webcam If a point was not present in the reference data If the distance between points was too miniscule (close to zero) and causes issues in calculations of the above This scoring is then converted into a FeedbackUI displayed during the level along with being factored into the final score presented to the user after the level has ended.","title":"Movement Scoring"},{"location":"unity/installation/","text":"Unity Installation Overview This document provides the details on how to install and set up a development environment for the Unity portion of the Danceology project. All of the following documentation will assume a certain amount of familiarity with Unity and Git/GitHub technologies. Unity Project Repository Link https://github.com/ETCDanceology/Danceology-Unity Tech Requirements Unity The Danceology Unity project is developed in C# within the Unity game engine version 2021.3.15f1. Unity provides download instructions for Unity Hub and the Editor itself; the specific version used for this project can be found here . It is recommended to modify Unity files using the Visual Studio IDE. ML Model Within the Unity application, we used a customized .onnx build of an OpenPose machine learning model. The ML model is currently being stored and distributed within the Unity Project repository using Git LFS . Installation Steps Download and install Unity Hub and Unity Editor version 2021.3.15f1 . When downloading the Editor, ensure that you add modules for all the platforms you wish to build for (usually, this includes Windows, Linux, and Mac) Clone the Danceology Unity repository locally Open Unity Hub -> Projects -> Open -> Select the Danceology project folder Development Setup Util Functions In Unity, clicking on the Play button will start running the game from the currently open scene. However, as most development tends to happen in a separate scene from the starting one, it becomes bothersome to manually swap scenes before running. As a shortcut, you can click on Util -> Set Starting Scene to automatically set the default starting scene to the \"StartScene\" scene. This shortcut will need to be clicked once every time the editor is first opened. Play Mode To run a Unity game in the Editor, click on the Play button at the top of the window. This will automatically direct you to the game mode screen. All of the UI was built to best work on a \"Full HD\" aspect ratio. You can use the dropdown at the top of the game screen to adjust the screen ratio.","title":"Installation"},{"location":"unity/installation/#unity-installation","text":"","title":"Unity Installation"},{"location":"unity/installation/#overview","text":"This document provides the details on how to install and set up a development environment for the Unity portion of the Danceology project. All of the following documentation will assume a certain amount of familiarity with Unity and Git/GitHub technologies.","title":"Overview"},{"location":"unity/installation/#unity-project","text":"","title":"Unity Project"},{"location":"unity/installation/#repository-link","text":"https://github.com/ETCDanceology/Danceology-Unity","title":"Repository Link"},{"location":"unity/installation/#tech-requirements","text":"","title":"Tech Requirements"},{"location":"unity/installation/#unity","text":"The Danceology Unity project is developed in C# within the Unity game engine version 2021.3.15f1. Unity provides download instructions for Unity Hub and the Editor itself; the specific version used for this project can be found here . It is recommended to modify Unity files using the Visual Studio IDE.","title":"Unity"},{"location":"unity/installation/#ml-model","text":"Within the Unity application, we used a customized .onnx build of an OpenPose machine learning model. The ML model is currently being stored and distributed within the Unity Project repository using Git LFS .","title":"ML Model"},{"location":"unity/installation/#installation-steps","text":"Download and install Unity Hub and Unity Editor version 2021.3.15f1 . When downloading the Editor, ensure that you add modules for all the platforms you wish to build for (usually, this includes Windows, Linux, and Mac) Clone the Danceology Unity repository locally Open Unity Hub -> Projects -> Open -> Select the Danceology project folder","title":"Installation Steps"},{"location":"unity/installation/#development-setup","text":"","title":"Development Setup"},{"location":"unity/installation/#util-functions","text":"In Unity, clicking on the Play button will start running the game from the currently open scene. However, as most development tends to happen in a separate scene from the starting one, it becomes bothersome to manually swap scenes before running. As a shortcut, you can click on Util -> Set Starting Scene to automatically set the default starting scene to the \"StartScene\" scene. This shortcut will need to be clicked once every time the editor is first opened.","title":"Util Functions"},{"location":"unity/installation/#play-mode","text":"To run a Unity game in the Editor, click on the Play button at the top of the window. This will automatically direct you to the game mode screen. All of the UI was built to best work on a \"Full HD\" aspect ratio. You can use the dropdown at the top of the game screen to adjust the screen ratio.","title":"Play Mode"},{"location":"unity/structure/","text":"Unity Codebase Structure Folder Structure Danceology follows the standard folder structure of Unity Projects. Most edits will take place in the Assets folder, which contains: Assets | - Animations # All animations + animation controllers | - Art # All art assets | - Data # Scriptable objects and other game data | - Materials # All GameObject materials | - Models # Pose detection ML model | - Plugins # Files provided by other Unity Plugins | - Prefabs # All prefabricated assets | - Presets # Editor presets | - Resources # Special Resources folder containing runtime-loaded assets | - Scenes # All game scenes | - Scripts # All C# scripts | - Settings # Shader and rendering-related settings | - Shaders # All shader assets | - Sounds # All SFX + BGM sound assets | - TextMesh Pro # Text rendering package | - Textures # All textures Most of these folders contain various assets that are used within the project, such as 3D models, 2D UI assets, animations, shaders, and sounds. The below sections will highlight some of the key folders to be familiar with. Scenes Each \"level\" within Unity is captured within a Scene . For the Danceology project, there are three main scenes: StartScene: The initial scene presented to a user, with all of the menuing to start a level. IntroScene: A separate scene used for the introduction level (playing an intro video). MainScene: The main scene with all of the level-related assets. This is where most of the epxerience takes place To edit a particular Scene , double-click its corresponding file in this folder to open the scene in the Editor. Resources The Resources folder is a special folder in Unity that allows for runtime loading of assets. For this project, we use the Resources folder to store 2D pose data for pose matching and feedback, UI images for \"Next Pose\" indicators, and captions for the tutorial level. Scripts All of the code within the game is located in this folder. Each of the code files is also separated into more specific directories based on functionality: Scripts | - Data # Scripts relating to level and in-game data | - GameObjects # Scripts relating to specifically instantiable GameObjects | - Managers # Global scene-specific managers | - PoseProcessing # Scripts for logic relating to pose parsing, comparison, and output | - Sound # Sound-related scripts | - UI # UI-related scripts | - Util # General utility scripts | - _UNUSED # Deprecated scripts Data This directory contains all the scripts that work directly with level-based data loaded into the level and other configurable ScriptableObjects . GameObjects This directory contains scripts that are directly employed by instantiable GameObjects within the scenes. Managers This directory contains global managers used within the scenes. These Managers are more global-level controllers for specific parts of the experience. PoseProcessing All of the logic for processing various aspects of pose input, comparison, and output (display within the experience) are contained within this folder. OpenPoseOutputProcessor.cs is the most low-level script within this folder that directly works with the output of the ML model. It performs all the basic conversions from the direct heatmap output of the model into readable formats for the rest of the code. PoseDetector.cs contains the global logic used to detect and perform computations/actions based on the webcam input as parsed by the ML model. Most of the general actions will go through this file. MovementCompare.cs specifically handles how the webcam input for the player's actions are compared and scored against the reference video positions. OutputDataReader.cs will convert and display the points found by the model into visible UI markers for the player. Sound This directory contains managers and related scripts for SFX and BGM used in the game. UI This directory contains managers and related scripts for all of the UI used in the game. The UI scripts in this directory have been split into two main categories: StartSceneUI , which has all the main menu-ing UI in the StartScene ; and GameSceneUI , which has all of the assets used specifically within the levels themselves. Other files outside of these include util/base classes used for other UI assets. Util This directory contains utility scripts used in the game and used to customize the editor.","title":"Codebase Structure"},{"location":"unity/structure/#unity-codebase-structure","text":"","title":"Unity Codebase Structure"},{"location":"unity/structure/#folder-structure","text":"Danceology follows the standard folder structure of Unity Projects. Most edits will take place in the Assets folder, which contains: Assets | - Animations # All animations + animation controllers | - Art # All art assets | - Data # Scriptable objects and other game data | - Materials # All GameObject materials | - Models # Pose detection ML model | - Plugins # Files provided by other Unity Plugins | - Prefabs # All prefabricated assets | - Presets # Editor presets | - Resources # Special Resources folder containing runtime-loaded assets | - Scenes # All game scenes | - Scripts # All C# scripts | - Settings # Shader and rendering-related settings | - Shaders # All shader assets | - Sounds # All SFX + BGM sound assets | - TextMesh Pro # Text rendering package | - Textures # All textures Most of these folders contain various assets that are used within the project, such as 3D models, 2D UI assets, animations, shaders, and sounds. The below sections will highlight some of the key folders to be familiar with.","title":"Folder Structure"},{"location":"unity/structure/#scenes","text":"Each \"level\" within Unity is captured within a Scene . For the Danceology project, there are three main scenes: StartScene: The initial scene presented to a user, with all of the menuing to start a level. IntroScene: A separate scene used for the introduction level (playing an intro video). MainScene: The main scene with all of the level-related assets. This is where most of the epxerience takes place To edit a particular Scene , double-click its corresponding file in this folder to open the scene in the Editor.","title":"Scenes"},{"location":"unity/structure/#resources","text":"The Resources folder is a special folder in Unity that allows for runtime loading of assets. For this project, we use the Resources folder to store 2D pose data for pose matching and feedback, UI images for \"Next Pose\" indicators, and captions for the tutorial level.","title":"Resources"},{"location":"unity/structure/#scripts","text":"All of the code within the game is located in this folder. Each of the code files is also separated into more specific directories based on functionality: Scripts | - Data # Scripts relating to level and in-game data | - GameObjects # Scripts relating to specifically instantiable GameObjects | - Managers # Global scene-specific managers | - PoseProcessing # Scripts for logic relating to pose parsing, comparison, and output | - Sound # Sound-related scripts | - UI # UI-related scripts | - Util # General utility scripts | - _UNUSED # Deprecated scripts","title":"Scripts"},{"location":"unity/structure/#data","text":"This directory contains all the scripts that work directly with level-based data loaded into the level and other configurable ScriptableObjects .","title":"Data"},{"location":"unity/structure/#gameobjects","text":"This directory contains scripts that are directly employed by instantiable GameObjects within the scenes.","title":"GameObjects"},{"location":"unity/structure/#managers","text":"This directory contains global managers used within the scenes. These Managers are more global-level controllers for specific parts of the experience.","title":"Managers"},{"location":"unity/structure/#poseprocessing","text":"All of the logic for processing various aspects of pose input, comparison, and output (display within the experience) are contained within this folder. OpenPoseOutputProcessor.cs is the most low-level script within this folder that directly works with the output of the ML model. It performs all the basic conversions from the direct heatmap output of the model into readable formats for the rest of the code. PoseDetector.cs contains the global logic used to detect and perform computations/actions based on the webcam input as parsed by the ML model. Most of the general actions will go through this file. MovementCompare.cs specifically handles how the webcam input for the player's actions are compared and scored against the reference video positions. OutputDataReader.cs will convert and display the points found by the model into visible UI markers for the player.","title":"PoseProcessing"},{"location":"unity/structure/#sound","text":"This directory contains managers and related scripts for SFX and BGM used in the game.","title":"Sound"},{"location":"unity/structure/#ui","text":"This directory contains managers and related scripts for all of the UI used in the game. The UI scripts in this directory have been split into two main categories: StartSceneUI , which has all the main menu-ing UI in the StartScene ; and GameSceneUI , which has all of the assets used specifically within the levels themselves. Other files outside of these include util/base classes used for other UI assets.","title":"UI"},{"location":"unity/structure/#util","text":"This directory contains utility scripts used in the game and used to customize the editor.","title":"Util"}]}